# Create DevUser
aws iam create-user --user-name DevUser




# Create Developers group
aws iam create-group --group-name Developers




# Add DevUser to Developers group
aws iam add-user-to-group --user-name DevUser --group-name Developers


#attach the policy to user
aws iam attach-group-policy --group-name Developers --policy-arn arn:aws:iam::aws:policy/DevelopersPolicy





# Attach an inline policy directly to the Developers group
aws iam create-policy --policy-name DevelopersEC2ReadAccess --policy-document "{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Action\": [ \"ec2:DescribeInstances\", \"ec2:DescribeVolumes\", \"ec2:DescribeSecurityGroups\", \"ec2:DescribeImages\", \"ec2:DescribeSnapshots\" ], \"Resource\": \"*\" } ] }"






# Create the role with trust policy and attach an inline policy in one command


aws iam create-role --role-name S3ReadAccessRole --assume-role-policy-document file://trust-policy.json

aws iam put-role-policy --role-name S3ReadAccessRole --policy-name InlineS3ReadAccessPolicy --policy-document file://inline-s3-read-policy.json











aws iam create-role --role-name S3ReadRole --assume-role-policy-document '{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Service": "ec2.amazonaws.com"
      },
      "Action": "sts:AssumeRole"
    }
  ]
}' && aws iam put-role-policy --role-name S3ReadRole --policy-name S3ReadAccessPolicy --policy-document '{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "s3:Get*",
        "s3:List*"
      ],
      "Resource": "*"
    }
  ]
}'



# Create trust policy for S3 read access role (if not already created)
aws iam create-role --role-name S3ReadAccessRole --assume-role-policy-document file://trust-policy.json

# Attach the inline policy to the role (if not already attached)
aws iam put-role-policy --role-name S3ReadAccessRole --policy-name InlineS3ReadAccessPolicy --policy-document file://inline-s3-read-policy.json

# Create assume role policy document and attach it to the user
aws iam put-user-policy --user-name <USERNAME> --policy-name AllowAssumeS3ReadRole --policy-document file://assume-role-policy.json


aws sts assume-role --role-arn arn:aws:iam::<YOUR_ACCOUNT_ID>:role/S3ReadAccessRole --role-session-name MySession






# Enable AWS Access Analyzer
aws accessanalyzer create-analyzer --analyzer-name MyAnalyzer --type ACCOUNT



aws iam generate-credential-report



aws iam get-credential-report



7.2. Configure AWS CLI with your AWS account credentials
   ```
   aws configure
   ```

7.3. Verify AWS CLI installation and configuration
   ```
   aws sts get-caller-identity
   ```

### 8. Additional AWS CLI Commands for IAM

8.1. List all IAM users with their creation date
   ```
   aws iam list-users --query 'Users[*].[UserName,CreateDate]' --output table
   ```

8.2. List all IAM roles and their associated policies
   ```
   aws iam list-roles --query 'Roles[*].[RoleName,PolicyNames]' --output table
   ```

